Question??? The purpose of the research is to establish the effectiveness and efficiency of Node.js as a development tool/environment not only in terms of it's performance, which is well documented, but also in terms of the ease of development, including the full range of development tools that are availabe in other languages, including scaffolding, database communication and de-bugging.  

The plan is to develop a simple application such as a messaging/chat app and/or an image processing app in three different language platforms; Node.js, Ruby on Rails and PHP.  The common denomimator amongst these three technologies is that the serverside scripting is interpreted.

There have been many examples of Node.js based applications outperforming other other, more traditional technologies as detailed by PayPal in the November 2013 PayPal Engineering Blog post Node.js at PayPal server side where almost unbelievable stats were achieved offering massive performance benefits from an application built in less time with fewer people, with less code and fewer files.  On the other hand  Netflix, another high profile internet goliath, discovered that their Node based application was eating up CPU resources while developing hourly endpoint latencies increases of 10ms (Netflix, 2014).  This indicates that it's not all plain sailing for applications running on Node.js and leads me to ask the question:- "What factors should a developer consider when deciding to build a web application in Node.js and at what point are the obvious performance benefits of Node outweighed by the practicalities and impracticalities involved with the implementation of this, still relatively new, technology?" 